{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "API for React Task Pro application",
    "description": "REST API for managing users, boards, columns, tasks in React Task Pro application",
    "license": {
      "name": "GoIt - Final project",
      "url": "https://github.com/VPresich/react-task-pro"
    }
  },
  "consumes": ["multipart/form-data", "application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://tasks-rest-api-8u4m.onrender.com/api" }],
  "tags": [
    {
      "name": "Users",
      "description": "Users authorization endpoints. Register a new user using name, email, and password."
    },
    {
      "name": "Boards",
      "description": "Create, delete, update"
    },
    {
      "name": "Columns",
      "description": "Create, delete, update "
    },
    {
      "name": "Tasks",
      "description": "Create, delete, update"
    },
    {
      "name": "Help",
      "description": "Send email"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmailInUse"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "User login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/BadLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Empty request body",
          "content": {},
          "required": false
        },
        "responses": {
          "204": {
            "description": "No content",
            "content": [{}]
          },
          "401": {
            "description": "Unauthorized (invaild or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Refresh user information",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],

        "requestBody": {
          "description": "Empty request body",
          "content": {},
          "required": false
        },

        "responses": {
          "200": {
            "description": "User refresh successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/avatar": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user avatar Url",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Empty request body",
          "content": {},
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invaild or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update avatar of current user",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Update avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "patch": {
        "summary": "Update user information",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Updated user information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmailInUse"
                }
              }
            }
          }
        }
      }
    },

    "/boards": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get all boards",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Board"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invaild or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new board",
        "description": "Create a new board and assign the current user as the owner.",
        "tags": ["Boards"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "My New Board"
                  },
                  "background": {
                    "type": "string",
                    "example": "blue"
                  },
                  "icon": {
                    "type": "string",
                    "example": "star"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Board successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60d5ec49f68a4b8b8c1b5c8e"
                    },
                    "title": {
                      "type": "string",
                      "example": "My New Board"
                    },
                    "background": {
                      "type": "string",
                      "example": "blue"
                    },
                    "icon": {
                      "type": "string",
                      "example": "star"
                    },
                    "owner": {
                      "type": "string",
                      "example": "60d5ec49f68a4b8b8c1b5c8e"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-06-13T03:56:05.574Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-06-13T03:56:05.574Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invaild or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },

    "/boards/{id}": {
      "get": {
        "summary": "Get a board by its ID",
        "description": "Retrieve detailed information about a specific board by its ID.",
        "tags": ["Boards"],

        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the board to retrieve.",
            "schema": {
              "type": "string",
              "example": "60d5ec49f68a4b8b8c1b5c8e"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved board details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized (invaild or missing token)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
              }
            }
          }
        },
        "404": {
          "description": "Board not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Board not found"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a board",
        "description": "Update the details of an existing board.",
        "tags": ["Boards"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the board to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated Board Title"
                  },
                  "background": {
                    "type": "string",
                    "example": "green"
                  },
                  "icon": {
                    "type": "string",
                    "example": "new-icon"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Board successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60d5ec49f68a4b8b8c1b5c8e"
                    },
                    "title": {
                      "type": "string",
                      "example": "Updated Board Title"
                    },
                    "background": {
                      "type": "string",
                      "example": "green"
                    },
                    "icon": {
                      "type": "string",
                      "example": "new-icon"
                    },
                    "owner": {
                      "type": "string",
                      "example": "60d5ec49f68a4b8b8c1b5c8e"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-06-13T03:56:05.574Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-06-13T03:56:05.574Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invaild or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Board not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete a board",
        "description": "Deletes a board along with its columns and tasks if the user is authorized.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the board to delete",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token for user authorization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful board deletion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or parameters)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                },
                "example": {
                  "message": "Invalid board ID"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invaild or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (user not authorized to delete the board)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "example": {
                  "message": "You are not authorized to remove this board"
                }
              }
            }
          },
          "404": {
            "description": "Not found (board not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "example": {
                  "message": "Board not found"
                }
              }
            }
          }
        }
      }
    },
    "/boards/{id}/columns": {
      "get": {
        "summary": "Get all columns for a board",
        "description": "Retrieve all columns associated with a specific board by its ID.",
        "tags": ["Columns"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the board to retrieve columns for.",
            "schema": {
              "type": "string",
              "example": "60d5ec49f68a4b8b8c1b5c8e"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved columns for the board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "60d5ec49f68a4b8b8c1b5c8e"
                      },
                      "title": {
                        "type": "string",
                        "example": "Column Title"
                      },
                      "board": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "666a6dd560dcc0c6c2d0f2f2"
                          },
                          "title": {
                            "type": "string",
                            "example": "Board Title"
                          },
                          "background": {
                            "type": "string",
                            "example": "111111"
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-13T03:56:05.574Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-13T03:56:05.574Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invaild or missing token)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Board not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Columns"],
        "summary": "Create a column for a board",
        "description": "Creates a new column for a specific board.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the board to add the column to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the new column"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Column created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Column"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not found (board not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/columns/{id}": {
      "patch": {
        "summary": "Update a column by ID",
        "tags": ["Columns"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the column to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "New title of the column"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Column updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Column"
                }
              }
            }
          },
          "404": {
            "description": "Column not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a column by ID",
        "tags": ["Columns"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the column to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Column deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Column"
                }
              }
            }
          },
          "404": {
            "description": "Column not found"
          }
        }
      }
    },
    "/boards/{id}/tasks": {
      "get": {
        "summary": "Get all tasks for a board",
        "description": "Retrieve all tasks associated with the columns of a specific board.",
        "tags": ["Tasks"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "60d5ec49f68a4b8b8c1b5c8e"
            },
            "description": "The ID of the board to retrieve tasks from"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all tasks for the specified board",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                },
                "examples": {
                  "example-1": {
                    "summary": "A task",
                    "value": [
                      {
                        "_id": "60d5ec49f68a4b8b8c1b5c8e",
                        "title": "Task 1",
                        "description": "Description for Task 1",
                        "status": "in-progress",
                        "column": "60d5ec49f68a4b8b8c1b5c8f",
                        "createdAt": "2024-06-13T03:56:05.574Z",
                        "updatedAt": "2024-06-13T03:56:05.574Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Board not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Board not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/columns/{id}/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a task for a column",
        "description": "Creates a new task in the specified column.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the column to add the task to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Task object that needs to be added to the column",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },

          "400": {
            "description": "Bad request (invalid request body or parameters)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                },
                "example": {
                  "message": "Invalid request body"
                }
              }
            }
          },
          "404": {
            "description": "Not found (column not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                },
                "example": {
                  "message": "Column not found"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update a task",
        "description": "Updates an existing task with new data.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the task to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The updated title of the task"
                  },
                  "description": {
                    "type": "string",
                    "description": "The updated description of the task"
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["Low", "Medium", "High", "Without priority"],
                    "description": "The updated priority level of the task"
                  },
                  "deadline": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The updated deadline for the task"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or parameters)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not found (task not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task",
        "description": "Deletes an existing task by its ID.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the task to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Not found (task not found)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/helps": {
      "post": {
        "summary": "Create a new help request",
        "tags": ["Help"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email of the requester"
                  },
                  "text": {
                    "type": "string",
                    "description": "Text of the help request"
                  }
                },
                "required": ["email", "text"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Help request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Help request received"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body or parameters)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ErrorInRequest"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },

      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        }
      },

      "securitySchemes": {
        "Bearer": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },

      "UpdateProfileRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "format": "email",
            "description": "User's password"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["light", "dark", "violet"]
          },
          "example": {
            "name": "string",
            "email": "user@example.com",
            "password": "user@example.com",
            "theme": "light"
          }
        }
      },

      "UpdateAvatarRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar file"
          }
        },
        "required": ["avatar"]
      },

      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "description": "JWT token for authentication",
            "type": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "test1970"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "test1970@test1970.com"
              },
              "avatarURL": {
                "type": "string",
                "format": "uri",
                "example": "https://res.cloudinary.com/dirtbd4yk/image/upload/v1717687717/def-avatar-light_1x_fkwy6u.jpg"
              },
              "theme": {
                "type": "string",
                "example": "light"
              }
            }
          }
        }
      },

      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL"
          },
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["light", "dark", "violet"]
          }
        }
      },

      "AvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL"
          }
        }
      },

      "Board": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the board"
          },
          "title": {
            "type": "string",
            "description": "Title of the board"
          },
          "background": {
            "type": "string",
            "description": "Url of background image"
          },
          "icon": {
            "type": "string",
            "description": "icon id in the spright"
          },

          "owner": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the owner"
              },
              "name": {
                "type": "string",
                "description": "Name of the owner"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Email of the owner"
              },
              "avatarUrl": {
                "type": "string",
                "description": "URL of the owner's avatar"
              },
              "theme": {
                "type": "string",
                "theme": "User theme"
              }
            },
            "description": "Information about the owner of the board"
          }
        }
      },

      "Column": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the column",
            "example": "60c9b01baf054e001f91f2b1"
          },
          "title": {
            "type": "string",
            "description": "The title of the column",
            "example": "To Do"
          },
          "board": {
            "type": "string",
            "description": "The ID of the board that the column belongs to",
            "example": "60c9b01baf054e001f91f2a9"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the column was created",
            "example": "2024-06-13T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the column was last updated",
            "example": "2024-06-13T12:30:00Z"
          }
        },
        "required": ["id", "title", "board", "createdAt", "updatedAt"]
      },

      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the created task"
          },
          "title": {
            "type": "string",
            "description": "The title of the task"
          },
          "description": {
            "type": "string",
            "description": "The description of the task"
          },
          "priority": {
            "type": "string",
            "description": "The priority level of the task",
            "enum": ["Low", "Medium", "High", "Without priority"]
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "description": "The deadline for the task"
          },
          "column": {
            "type": "string",
            "description": "The ID of the column this task belongs to"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Task creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Task last update timestamp"
          }
        },
        "example": {
          "id": "60d21b4667d0d8992e610c86",
          "title": "New Task",
          "description": "This is a new task",
          "priority": "Low",
          "deadline": "2024-06-14T12:00:00Z",
          "column": "60d21b4667d0d8992e610c85",
          "createdAt": "2024-06-13T12:00:00Z",
          "updatedAt": "2024-06-13T12:00:00Z"
        }
      },

      "ErrorUnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Not authorized"
        }
      },

      "ErrorInRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Error message"
        }
      },

      "EmailInUse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Email in use"
        }
      },

      "BadLoginResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "Email or password is wrong"
        }
      }
    }
  }
}
